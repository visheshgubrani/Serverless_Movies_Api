name: 'Terraform Pipeline'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: 'ap-south-1'
  TF_VAR_api_key: ${{ secrets.GEMINI_API_KEY }}
  TF_VAR_accountId: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Lambda Dependencies
        run: |
          for dir in terraform/modules/lambda/*/
          do
            if [ -f "${dir}package.json" ]; then
              echo "Installing dependencies in ${dir}"
              cd "${dir}"
              npm ci
              cd -
            fi 
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -no-color

  upload_movies:
    name: 'Upload Movies Data'
    needs: terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./scripts/upload_movies

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Run Upload Script
        run: node index.js
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: 'ap-south-1'
